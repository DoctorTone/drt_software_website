/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useFrame } from "@react-three/fiber";
import { useGLTF } from "@react-three/drei";

export function Phone({ fade, ...props }) {
	const { nodes, materials } = useGLTF("./models/phone.glb");
	const matRef = useRef();

	useFrame((state, delta) => {
		if (fade) {
			matRef.current.opacity -= delta;
			if (matRef.current.opacity < 0) {
				matRef.current.opacity = 1;
			}
		}
	});

	return (
		<group {...props} dispose={null}>
			<mesh geometry={nodes.Phone.geometry}>
				<meshLambertMaterial transparent={true} color={0x777777} ref={matRef} />
			</mesh>
		</group>
	);
}

useGLTF.preload("./models/phone.glb");
