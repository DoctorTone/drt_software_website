/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";
import { SCENE, MATERIALS } from "../state/Config.js";

export function Cloud(props) {
  const { nodes } = useGLTF("./models/cloud.glb");
  const cloud = useRef();

  useFrame((state, delta) => {
    cloud.current.position.x += delta;
    if (cloud.current.position.x > SCENE.CLOUD_MAX) {
      cloud.current.position.x = SCENE.CLOUD_MIN;
    }
  });

  return (
    <group ref={cloud} {...props} dispose={null}>
      <mesh geometry={nodes.Sphere001.geometry} material={MATERIALS.CLOUD} />
      <mesh
        position={[-10, 0, 0]}
        geometry={nodes.Sphere001.geometry}
        material={MATERIALS.CLOUD}
      />
      <mesh
        position={[-14, 0, 5]}
        geometry={nodes.Sphere001.geometry}
        material={MATERIALS.CLOUD}
      />
      <mesh
        position={[7, -1, 0]}
        geometry={nodes.Sphere001.geometry}
        material={MATERIALS.CLOUD}
      />
      <mesh
        position={[-16, -1, -6]}
        geometry={nodes.Sphere001.geometry}
        material={MATERIALS.CLOUD}
      />
    </group>
  );
}

useGLTF.preload("./models/cloud.glb");
