/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF, useTexture } from "@react-three/drei";
import { getDeviceStatus } from "../utils/Utils.jsx";
import { useFrame } from "@react-three/fiber";

export function Tablet({ fade, ...props }) {
	const { nodes, materials } = useGLTF("./models/tablet.glb");
	const texture = useTexture(props.map);
	texture.flipY = false;

	const isMobile = getDeviceStatus();

	const matRef = useRef();

	useFrame((state, delta) => {
		if (fade) {
			matRef.current.opacity -= delta;
			if (matRef.current.opacity < 0) {
				matRef.current.opacity = 1;
			}
		}
	});

	return (
		<group {...props} dispose={null}>
			<group scale={[0.1, 1.2, 0.9]}>
				{isMobile ? (
					<mesh geometry={nodes.Cube001.geometry}>
						<meshLambertMaterial color={"grey"} />
					</mesh>
				) : (
					<mesh geometry={nodes.Cube001.geometry}>
						<meshPhysicalMaterial
							color={0xeeeeee}
							transmission={1}
							roughness={0.2}
							thickness={10}
							envMapIntensity={1.5}
						/>
					</mesh>
				)}

				<mesh geometry={nodes.Cube001_1.geometry}>
					<meshLambertMaterial transparent={true} map={texture} ref={matRef} />
				</mesh>
			</group>
		</group>
	);
}

useGLTF.preload("./models/tablet.glb");
