/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useFrame } from "@react-three/fiber";
import { useGLTF } from "@react-three/drei";
import { MATERIALS } from "../state/Config.js";

export function Keyboard({ fade, ...props }) {
	const { nodes, materials } = useGLTF("./models/keyboard.glb");
	const keyMatRefs = [useRef(), useRef(), useRef(), useRef()];

	useFrame((state, delta) => {
		if (fade) {
			for (let i = 0; i < keyMatRefs.length; ++i) {
				keyMatRefs[i].current.opacity -= delta;
			}
			if (keyMatRefs[0].current.opacity < 0) {
				for (let i = 0; i < keyMatRefs.length; ++i) {
					keyMatRefs[i].current.opacity = 1;
				}
			}
		}
	});

	return (
		<group {...props} dispose={null}>
			<mesh geometry={nodes.Cube027.geometry}>
				<meshLambertMaterial
					transparent={true}
					color={0x777777}
					ref={keyMatRefs[0]}
				/>
			</mesh>
			<mesh geometry={nodes.KEYs.geometry}>
				<meshLambertMaterial
					transparent={true}
					color={0xcc7306}
					ref={keyMatRefs[1]}
				/>
			</mesh>
			<mesh geometry={nodes.Cube027_2.geometry}>
				<meshLambertMaterial
					transparent={true}
					color={0x777777}
					ref={keyMatRefs[2]}
				/>
			</mesh>
			<mesh geometry={nodes.Cube027_4.geometry}>
				<meshLambertMaterial
					transparent={true}
					color={0x777777}
					ref={keyMatRefs[3]}
				/>
			</mesh>
		</group>
	);
}

useGLTF.preload("./models/keyboard.glb");
