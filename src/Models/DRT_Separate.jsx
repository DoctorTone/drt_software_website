/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useFrame } from "@react-three/fiber";
import { useGLTF, Float, useEnvironment } from "@react-three/drei";
import { SCENE } from "../state/Config";

const MODEL_COLOR = "silver";

export function DRT_Separate({ fade, rotate, ...props }) {
  const { nodes } = useGLTF("./models/DRT_Separate.gltf");
  const matRef = useRef();
  const meshRef = useRef();
  let rotationEnabled = true;
  let elapsedTime = 0;
  const presetTexture = useEnvironment({
    files: "./textures/evening_sky_1k.hdr",
  });

  useFrame((state, delta) => {
    elapsedTime += delta;
    if (fade) {
      matRef.current.envMapIntensity = Math.sin(elapsedTime * 0.5);
    }
    if (rotate && rotationEnabled) {
      elapsedTime += delta;
      if (elapsedTime < SCENE.INITIAL_ANIMATION_TIME) return;
      meshRef.current.rotation.y += delta;
      if (meshRef.current.rotation.y >= Math.PI * 2) {
        meshRef.current.rotation.y = Math.PI * 2;
        rotationEnabled = false;
      }
    }
  });

  return (
    <Float
      speed={2}
      rotationIntensity={0.5}
      floatIntensity={2}
      floatingRange={[-0.1, 0.1]}
    >
      <group {...props} dispose={null}>
        <mesh geometry={nodes.DRT.geometry}>
          <meshStandardMaterial
            ref={matRef}
            metalness={1}
            roughness={0}
            color={MODEL_COLOR}
            envMap={presetTexture}
          />
        </mesh>
        <mesh
          ref={meshRef}
          geometry={nodes.Software.geometry}
          position={[-0.25, -0.5, 0]}
        >
          <meshStandardMaterial
            metalness={1}
            roughness={0}
            color={MODEL_COLOR}
            envMap={presetTexture}
          />
        </mesh>
      </group>
    </Float>
  );
}

useGLTF.preload("./models/DRT_Separate.gltf");
