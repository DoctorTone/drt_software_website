/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useFrame } from "@react-three/fiber";
import { useGLTF } from "@react-three/drei";
import { MATERIALS } from "../state/Config.js";

export function Work({ fade, ...props }) {
	const { nodes, materials } = useGLTF("./models/work.glb");
	const matRefs = { screwdriver: useRef(), wrench: useRef() };

	useFrame((state, delta) => {
		if (fade) {
			matRefs.screwdriver.current.opacity -= delta;
			matRefs.wrench.current.opacity -= delta;
			if (matRefs.screwdriver.current.opacity < 0) {
				matRefs.screwdriver.current.opacity = 1;
				matRefs.wrench.current.opacity = 1;
			}
		}
	});

	return (
		<group {...props} dispose={null}>
			<mesh
				geometry={nodes.screwdriver.geometry}
				position={[0.76, 1.9, -0.76]}
				rotation={[0, -1.55, 2.31]}
			>
				<meshLambertMaterial
					transparent={true}
					color={0x777777}
					ref={matRefs.screwdriver}
				/>
			</mesh>
			<mesh
				geometry={nodes.wrench.geometry}
				position={[-0.6, 0, -1.07]}
				rotation={[-2.89, -1.54, 1.01]}
				scale={0.54}
			>
				<meshLambertMaterial
					transparent={true}
					color={0x777777}
					ref={matRefs.wrench}
				/>
			</mesh>
		</group>
	);
}

useGLTF.preload("./models/work.glb");
